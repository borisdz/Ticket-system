/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/busticket_screen/BusTicketViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

BusTicketViewBase::BusTicketViewBase() :
    updateItemCallback(this, &BusTicketViewBase::updateItemCallbackHandler),
    flexButtonCallback(this, &BusTicketViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &BusTicketViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X480_SPOTLIGHTS_ID));
    add(background);

    buttonCancel.setXY(229, 215);
    buttonCancel.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID));
    buttonCancel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_99TS));
    buttonCancel.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonCancel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonCancel.setAction(buttonCallback);
    add(buttonCancel);

    buttonNext.setXY(359, 215);
    buttonNext.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_INACTIVE_ID));
    buttonNext.setLabelText(touchgfx::TypedText(T___SINGLEUSE_NDMJ));
    buttonNext.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNext.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNext.setAction(buttonCallback);
    add(buttonNext);

    textArea1.setXY(249, 136);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SN6S));
    add(textArea1);

    busTextSelectedDest.setXY(262, 170);
    busTextSelectedDest.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    busTextSelectedDest.setLinespacing(0);
    busTextSelectedDest.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AH6B));
    add(busTextSelectedDest);

    busTextTicketNo.setXY(249, 23);
    busTextTicketNo.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    busTextTicketNo.setLinespacing(0);
    Unicode::snprintf(busTextTicketNoBuffer, BUSTEXTTICKETNO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_H2HS).getText());
    busTextTicketNo.setWildcard(busTextTicketNoBuffer);
    busTextTicketNo.resizeToCurrentText();
    busTextTicketNo.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CT7L));
    add(busTextTicketNo);

    busButtonDown.setBoxWithBorderPosition(0, 0, 70, 50);
    busButtonDown.setBorderSize(5);
    busButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    busButtonDown.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_000000_SVG_ID));
    busButtonDown.setIconXY(10, 0);
    busButtonDown.setAction(flexButtonCallback);
    busButtonDown.setPosition(249, 69, 70, 50);
    add(busButtonDown);

    busButtonUp.setBoxWithBorderPosition(0, 0, 70, 50);
    busButtonUp.setBorderSize(5);
    busButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    busButtonUp.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_000000_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    busButtonUp.setIconXY(11, 0);
    busButtonUp.setAction(flexButtonCallback);
    busButtonUp.setPosition(379, 69, 70, 50);
    add(busButtonUp);

    scrollBusDest.setPosition(14, 20, 210, 238);
    scrollBusDest.setHorizontal(false);
    scrollBusDest.setCircular(false);
    scrollBusDest.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollBusDest.setSwipeAcceleration(10);
    scrollBusDest.setDragAcceleration(10);
    scrollBusDest.setNumberOfItems(7);
    scrollBusDest.setPadding(0, 0);
    scrollBusDest.setSnapping(false);
    scrollBusDest.setOvershootPercentage(75);
    scrollBusDest.setDrawableSize(40, 0);
    scrollBusDest.setDrawables(scrollBusDestListItems, updateItemCallback);
    add(scrollBusDest);
}

BusTicketViewBase::~BusTicketViewBase()
{

}

void BusTicketViewBase::setupScreen()
{
    scrollBusDest.initialize();
    for (int i = 0; i < scrollBusDestListItems.getNumberOfDrawables(); i++)
    {
        scrollBusDestListItems[i].initialize();
    }
}

void BusTicketViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &busButtonDown)
    {
        //busButtonDownPressed
        //When busButtonDown clicked call virtual function
        //Call busButtonDownPressed
        busButtonDownPressed();
    }
    if (&src == &busButtonUp)
    {
        //busButtonUpPressed
        //When busButtonUp clicked call virtual function
        //Call busButtonUpPressed
        busButtonUpPressed();
    }
}

void BusTicketViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonNext)
    {
        //busButtonNextPressed
        //When buttonNext clicked change screen to ReviewTicket
        //Go to ReviewTicket with no screen transition
        application().gotoReviewTicketScreenNoTransition();
    }
    if (&src == &buttonCancel)
    {
        //buttonCancelPressed
        //When buttonCancel clicked call virtual function
        //Call busButtonCancelPressed
        busButtonCancelPressed();
    }
}

void BusTicketViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollBusDestListItems)
    {
        scrollBusDestUpdateItem(scrollBusDestListItems[containerIndex], itemIndex);
    }
}
